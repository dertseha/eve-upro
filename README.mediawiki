= upro - README =

== Obsolete ==
'''This project has long been discontinued'''

Usage and interest in this application was never high, so it remained as a learning project in various fields for me.

If you are interested in the path-finding algorithm, the core has been extracted and re-implemented in these libraries:
* eve-route.js: https://github.com/dertseha/eve-route.js - in JavaScript, superseded by
* everoute: https://github.com/dertseha/everoute - in Go

If you still can extract anything useful from this project, I'd be happy about a reference.

== About ==
'''upro''' is an online application to support navigation for the pilots of New Eden ([http://www.eveonline.com EVE Online]).
It uses a 3D projected map of the solar systems to display current locations and jump corridors such as of jump gates
or wormholes. '''upro''' provides a routing system which refers to the existing and provided jump corridors, including
wormholes and jump drive capabilities. Information such as for routes can be saved at the server, shared with others
and downloaded to the autopilot of the NeoCom.

'''upro''' is a server based service, running on node.js with a client written in JavaScript for a web browser.

See the [https://github.com/dertseha/eve-upro/wiki wiki] for a complete documentation.

This project is using the [http://opensource.org/licenses/mit-license.php MIT license].

== Project Structure ==

Although initially not intended, the Eclipse project ended up in a dedicated folder, so it's now eve-upro/eve-upro.
But I don't see too much of a problem with that - makes the readme stand out more.

== Used Tools for Development ==

I'm using
* Eclipse Indigo
** Plugins
*** for JavaScript development
*** for PHP development
*** MakeGood for PHP unit tests: http://redmine.piece-framework.com/
*** JsTestDriver for JavaScript unit tests: http://code.google.com/p/js-test-driver/
*** PlantUML: http://plantuml.sourceforge.net/eclipse.html
* Node.js 0.8.2

== Submodules ==
* See package.json

== Test Environment ==
* MongoDB, default setup
* Node.js 0.8.X

=== Testing folder structure(s) ===
==== eve-upro\test\** ====
These folder contain the external tests - i.e., they require the application running and available to provide
any dependent scripts.

===== eve-upro\test\js\** =====
Containing all the tests for the client scripts, based on the compressed export from the main application.
jsTestDriver is configured (see jsTestDriver.conf) to take the upro.js file from localhost.

Note: some tests are under a folder named 'longRunning'. These are taking more than a second to complete
and are thus also not listed in the jsTestDriver.conf file. When trying to execute them, test driver will
not continue and halt there.

===== eve-upro\test\php\** =====
This folder is meant to hold selenium based tests in PHP as I haven't found a working selenium driver for node yet.

===== eve-upro\test\manual\** =====
Holding various (legacy) tests with visual interaction and prototypes. Some of these tests are already moved to be
provided online by upro during runtime. 

==== eve-upro\src\**\test\** ====
Tests based on nodeunit for the server side units.

eve-api has dedicated tests to be prepared as a dedicated package perhaps in the future (as an option).

